import math

distance_matrix = [[0.0, 13.892443989449804, 21.02379604162864, 32.55764119219941, 22.02271554554524, 23.08679276123039,
                    12.041594578792296, 22.02271554554524, 32.449961479175904, 32.0624390837628, 20.808652046684813,
                    28.160255680657446, 29.966648127543394, 29.120439557122072, 30.870698080866262, 29.832867780352597],
                   [13.892443989449804, 0.0, 12.36931687685298, 19.209372712298546, 11.661903789690601,
                    24.20743687382041, 12.083045973594572, 18.601075237738275, 20.8806130178211, 26.92582403567252,
                    7.0710678118654755, 18.867962264113206, 16.15549442140351, 21.37755832643195, 32.64965543462902,
                    17.0], [21.02379604162864, 12.36931687685298, 0.0, 15.297058540778355, 22.20360331117452,
                            16.278820596099706, 10.63014581273465, 8.54400374531753, 12.041594578792296,
                            14.7648230602334, 10.63014581273465, 29.068883707497267, 18.973665961010276,
                            9.055385138137417, 23.769728648009426, 23.323807579381203],
                   [32.55764119219941, 19.209372712298546, 15.297058540778355, 0.0, 21.095023109728988, 31.0,
                    25.079872407968907, 23.0, 7.810249675906654, 24.166091947189145, 12.206555615733702,
                    25.317977802344327, 9.486832980505138, 17.08800749063506, 37.48332962798263, 15.811388300841896],
                   [22.02271554554524, 11.661903789690601, 22.20360331117452, 21.095023109728988, 0.0,
                    35.805027579936315, 23.706539182259394, 29.698484809834994, 26.30589287593181, 36.89173349139343,
                    12.083045973594572, 7.211102550927978, 13.0, 30.4138126514911, 44.204072210600685,
                    9.219544457292887],
                   [23.08679276123039, 24.20743687382041, 16.278820596099706, 31.0, 35.805027579936315, 0.0,
                    12.806248474865697, 8.0, 25.495097567963924, 13.45362404707371, 26.0, 43.01162633521314,
                    35.17101079013795, 16.15549442140351, 8.48528137423857, 39.0],
                   [12.041594578792296, 12.083045973594572, 10.63014581273465, 25.079872407968907, 23.706539182259394,
                    12.806248474865697, 0.0, 10.0, 22.67156809750927, 20.024984394500787, 16.0, 30.886890422961002,
                    26.019223662515376, 17.46424919657298, 21.2602916254693, 28.442925306655784],
                   [22.02271554554524, 18.601075237738275, 8.54400374531753, 23.0, 29.698484809834994, 8.0, 10.0, 0.0,
                    17.72004514666935, 10.04987562112089, 18.867962264113206, 36.796738985948195, 27.51363298439521,
                    9.219544457292887, 15.231546211727817, 31.76476034853718],
                   [32.449961479175904, 20.8806130178211, 12.041594578792296, 7.810249675906654, 26.30589287593181,
                    25.495097567963924, 22.67156809750927, 17.72004514666935, 0.0, 16.76305461424021,
                    15.033296378372908, 31.622776601683793, 16.64331697709324, 10.04987562112089, 31.016124838541646,
                    22.825424421026653],
                   [32.0624390837628, 26.92582403567252, 14.7648230602334, 24.166091947189145, 36.89173349139343,
                    13.45362404707371, 20.024984394500787, 10.04987562112089, 16.76305461424021, 0.0, 25.0,
                    43.60045871318328, 31.400636936215164, 7.211102550927978, 15.524174696260024, 36.796738985948195],
                   [20.808652046684813, 7.0710678118654755, 10.63014581273465, 12.206555615733702, 12.083045973594572,
                    26.0, 16.0, 18.867962264113206, 15.033296378372908, 25.0, 0.0, 18.601075237738275,
                    10.04987562112089, 18.35755975068582, 34.0, 13.0],
                   [28.160255680657446, 18.867962264113206, 29.068883707497267, 25.317977802344327, 7.211102550927978,
                    43.01162633521314, 30.886890422961002, 36.796738985948195, 31.622776601683793, 43.60045871318328,
                    18.601075237738275, 0.0, 16.0312195418814, 36.89173349139343, 51.40038910358559, 10.04987562112089],
                   [29.966648127543394, 16.15549442140351, 18.973665961010276, 9.486832980505138, 13.0,
                    35.17101079013795, 26.019223662515376, 27.51363298439521, 16.64331697709324, 31.400636936215164,
                    10.04987562112089, 16.0312195418814, 0.0, 24.20743687382041, 42.720018726587654, 6.324555320336759],
                   [29.120439557122072, 21.37755832643195, 9.055385138137417, 17.08800749063506, 30.4138126514911,
                    16.15549442140351, 17.46424919657298, 9.219544457292887, 10.04987562112089, 7.211102550927978,
                    18.35755975068582, 36.89173349139343, 24.20743687382041, 0.0, 21.0, 29.698484809834994],
                   [30.870698080866262, 32.64965543462902, 23.769728648009426, 37.48332962798263, 44.204072210600685,
                    8.48528137423857, 21.2602916254693, 15.231546211727817, 31.016124838541646, 15.524174696260024,
                    34.0, 51.40038910358559, 42.720018726587654, 21.0, 0.0, 46.95742752749558],
                   [29.832867780352597, 17.0, 23.323807579381203, 15.811388300841896, 9.219544457292887, 39.0,
                    28.442925306655784, 31.76476034853718, 22.825424421026653, 36.796738985948195, 13.0,
                    10.04987562112089, 6.324555320336759, 29.698484809834994, 46.95742752749558, 0.0]]
routes = [
    [2],
    [6],
    [8],
    [15, 12, 10],
    [14, 5],
    [13, 9, 7],
    [11, 4],
    [3, 1]
]

my_routes = [[0, 6, 0], [0, 1, 10, 11, 0], [0, 2, 0], [0, 4, 15, 0], [0, 13, 9, 7, 0], [0, 8, 0], [0, 12, 3, 0], [0, 5, 14, 0]]

def round_val(val):
    return round(val)

def calculate_route_distance(route, distance_matrix):
    distance = 0
    distance += round_val(distance_matrix[0][route[0]])
    for i in range(len(route) - 1):
        distance += round_val(distance_matrix[route[i]][route[i + 1]])
    distance += round_val(distance_matrix[route[-1]][0])
    return distance

def calculate_all_routes_distances(routes, distance_matrix):
    total_distances = []
    for route in routes:
        distance = calculate_route_distance(route, distance_matrix)
        total_distances.append(distance)
    return total_distances

# Calculate distances for all routes
distances = calculate_all_routes_distances(my_routes, distance_matrix)

# Print the distances and total distance
for i, route in enumerate(my_routes):
    print(f"Route {i + 1}: {route}, Distance: {distances[i]}")

total_distance = sum(distances)
print(f"Total Distance: {total_distance}")
